{"version":3,"sources":["Components/GoodsList.tsx","api/goods.ts","App.tsx","Components/Button.tsx","index.tsx"],"names":["GoodsList","props","className","goodsToShow","map","good","classNames","color","name","id","getAll","fetch","then","response","json","Colors","get5First","goods","sort","a","b","localeCompare","slice","getRedGoods","filter","Button","type","onClick","callback","buttonType","App","state","visibleGoods","loadingError","loadGoods","setState","error","showAll","showFirstFive","showRedGoods","this","green","blue","red","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+OAOaA,EAA6B,SAACC,GACzC,OACE,oBAAIC,UAAU,8BAAd,SACGD,EAAME,YAAYC,KAAI,SAAAC,GAAI,OACzB,oBAEEH,UAAWI,IAAW,oBAAqB,CACzC,kBAAkC,QAAfD,EAAKE,MACxB,gBAAgC,SAAfF,EAAKE,MACtB,mBAAmC,UAAfF,EAAKE,QAL7B,SAQGF,EAAKG,MAPDH,EAAKI,UCTb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICEFC,EDFQC,EAAY,WACvB,OAAON,IACJE,MAAK,SAAAK,GAAK,OAAIA,EACZC,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAEX,KAAKa,cAAcD,EAAEZ,SAClDc,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOb,IACJE,MAAK,SAAAK,GAAK,OAAIA,EAAMO,QAAO,SAACnB,GAAD,MAA+B,QAAfA,EAAKE,aERxCkB,EAA0B,SAACxB,GACtC,OACE,yBACEC,UAAWI,IAAW,SAAU,WAAY,OAAQL,EAAMM,OAC1DmB,KAAK,SACLC,QAAS1B,EAAM2B,SAHjB,UAKG,QACA3B,EAAM4B,WACN,c,SDRFd,K,eAAAA,E,gBAAAA,E,oBAAAA,M,SAMCe,E,4MACJC,MAAe,CACbC,aAAc,GACdC,aAAc,I,EAGhBC,UAAY,SAACN,GACX,IACEA,IACGhB,MAAK,SAACK,GACL,EAAKkB,SAAS,CAAEH,aAAcf,OAElC,MAAOmB,GACP,EAAKD,SAAS,CAAEF,aAAc,kC,EAIlCI,QAAU,WACR,EAAKH,UAAUxB,I,EAGjB4B,cAAgB,WACd,EAAKJ,UAAUlB,I,EAGjBuB,aAAe,WACb,EAAKL,UAAUX,I,4CAGjB,WACE,OACE,qBAAKrB,UAAU,8BAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,mCAEA,cAAC,EAAD,CACE2B,WAAW,MACXD,SAAUY,KAAKH,QACf9B,MAAOQ,EAAO0B,QAGhB,cAAC,EAAD,CACEZ,WAAW,IACXD,SAAUY,KAAKF,cACf/B,MAAOQ,EAAO2B,OAGhB,cAAC,EAAD,CACEb,WAAW,MACXD,SAAUY,KAAKD,aACfhC,MAAOQ,EAAO4B,SAGjBH,KAAKT,MAAME,cACV,4BACGO,KAAKT,MAAME,eAIfO,KAAKT,MAAMC,aAAaY,OAAS,GAChC,mCACE,qBAAK1C,UAAU,wBAAf,SACE,cAAC,EAAD,CAAWC,YAAaqC,KAAKT,MAAMC,4B,GA/DjCa,IAAMC,WAyEThB,IEtFfiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2246bca7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  goodsToShow: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  return (\n    <ul className=\"content is-medium card py-3\">\n      {props.goodsToShow.map(good => (\n        <li\n          key={good.id}\n          className={classNames('card-content py-0', {\n            'has-text-danger': good.color === 'red',\n            'has-text-link': good.color === 'blue',\n            'has-text-primary': good.color === 'green',\n          })}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good: Good) => good.color === 'red'));\n};\n","import React from 'react';\nimport { GoodsList } from './Components/GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Button } from './Components/Button';\n\ntype State = {\n  visibleGoods: Good[];\n  loadingError: string;\n};\n\nenum Colors {\n  blue = 'is-link',\n  red = 'is-danger',\n  green = 'is-primary',\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    visibleGoods: [],\n    loadingError: '',\n  };\n\n  loadGoods = (callback: LoadFunction) => {\n    try {\n      callback()\n        .then((goods: Good[]) => {\n          this.setState({ visibleGoods: goods });\n        });\n    } catch (error) {\n      this.setState({ loadingError: 'Ooops, something went wrong' });\n    }\n  };\n\n  showAll = () => {\n    this.loadGoods(getAll);\n  };\n\n  showFirstFive = () => {\n    this.loadGoods(get5First);\n  };\n\n  showRedGoods = () => {\n    this.loadGoods(getRedGoods);\n  };\n\n  render() {\n    return (\n      <div className=\"container section is-medium\">\n        <div className=\"columns\">\n          <div className=\"column is-half\">\n            <h1 className=\"title is-1\">Dynamic list of Goods</h1>\n\n            <Button\n              buttonType=\"all\"\n              callback={this.showAll}\n              color={Colors.green}\n            />\n\n            <Button\n              buttonType=\"5\"\n              callback={this.showFirstFive}\n              color={Colors.blue}\n            />\n\n            <Button\n              buttonType=\"red\"\n              callback={this.showRedGoods}\n              color={Colors.red}\n            />\n          </div>\n          {this.state.loadingError || (\n            <p>\n              {this.state.loadingError}\n            </p>\n          )}\n\n          {this.state.visibleGoods.length > 0 && (\n            <>\n              <div className=\"column is-one-quarter\">\n                <GoodsList goodsToShow={this.state.visibleGoods} />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  buttonType: string;\n  callback: () => void;\n  color: string;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  return (\n    <button\n      className={classNames('button', 'is-light', 'mx-2', props.color)}\n      type=\"button\"\n      onClick={props.callback}\n    >\n      {'Load '}\n      {props.buttonType}\n      {' goods'}\n    </button>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}